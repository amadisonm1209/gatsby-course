{"version":3,"sources":["webpack:///./src/components/Pagination.js","webpack:///./src/pages/slicemasters.js"],"names":["PaginationStyles","styled","div","Pagination","pageSize","totalCount","currentPage","base","skip","totalPages","Math","ceil","prevPage","nextPage","hasNextPage","hasPrevPage","disabled","to","Array","from","length","map","_","i","className","SlicemasterGrid","SlicemasterStyles","SlicesmastersPage","data","pageContext","slicemasters","console","log","SEO","title","parseInt","process","nodes","person","slug","current","name","fluid","image","asset","description","query"],"mappings":"sPAIMA,EAAmBC,IAAOC,IAAV,mFAAGD,CAAH,iVA0BP,SAASE,EAAT,GAAsE,IAAjDC,EAAgD,EAAhDA,SAAUC,EAAsC,EAAtCA,WAAYC,EAA0B,EAA1BA,YAAmBC,GAAO,EAAbC,KAAa,EAAPD,MACnEE,EAAaC,KAAKC,KAAKN,EAAaD,GACpCQ,EAAWN,EAAc,EACzBO,EAAUP,EAAc,EACxBQ,EAAcD,GAAYJ,EAC1BM,EAAcH,GAAY,EAEhC,OACI,kBAACZ,EAAD,KACI,kBAAC,IAAD,CAAMgB,UAAWD,EAAaE,GAAOV,EAAL,IAAaK,GAA7C,YACCM,MAAMC,KAAK,CAAEC,OAAQX,IAAcY,KAAI,SAACC,EAAGC,GAAJ,OACpC,kBAAC,IAAD,CAAMC,UAA2B,IAAhBlB,GAA2B,IAANiB,EAAU,UAAY,GAAIN,GAAOV,EAAL,KAAagB,EAAI,EAAIA,EAAI,EAAI,KAAOA,EAAI,MAE9G,kBAAC,IAAD,CAAMP,UAAWF,EAAaG,GAAOV,EAAL,IAAaM,GAA7C,a,gBCpCNY,EAAkBxB,IAAOC,IAAV,oFAAGD,CAAH,2FAMfyB,EAAoBzB,IAAOC,IAAV,sFAAGD,CAAH,qUA2BR,SAAS0B,EAAT,GAAmD,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,YACxCC,EAAeF,EAAKE,aAE1B,OADAC,QAAQC,IAAIJ,GAER,oCACI,kBAACK,EAAA,EAAD,CAAKC,MAAK,wBAAyBL,EAAYvB,aAAe,KAC9D,kBAACH,EAAD,CACAC,SAAU+B,SAASC,KACnB/B,WAAYyB,EAAazB,WACzBC,YAAauB,EAAYvB,aAAe,EACxCE,KAAMqB,EAAYrB,KAClBD,KAAK,kBAEL,kBAACkB,EAAD,KACCK,EAAaO,MAAMhB,KAAI,SAAAiB,GAAM,OAC1B,kBAACZ,EAAD,KACI,kBAAC,IAAD,CAAMT,GAAE,gBAAkBqB,EAAOC,KAAKC,SAClC,4BACI,0BAAMhB,UAAU,QAAQc,EAAOG,QAGvC,kBAAC,IAAD,CAAKC,MAAOJ,EAAOK,MAAMC,MAAMF,QAC/B,uBAAGlB,UAAU,eAAec,EAAOO,mBAQhD,IAAMC,EAAK","file":"component---src-pages-slicemasters-js-8ac1752ca4b6f99ba00a.js","sourcesContent":["import { Link } from 'gatsby';\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst PaginationStyles = styled.div`\n    display: flex;\n    align-content: center;\n    align-items: center;\n    justify-items: center;\n    border: 1px solid var(--grey);\n    margin: 2rem 0;\n    border-radius: 5px;\n    text-align: center;\n    & > * {\n        padding: 1rem;\n        flex: 1;\n        border-right: 1px solid var(--grey);\n        text-decoration: none;\n        &[aria-current],\n        &.current {\n            color: var(--red);\n        }\n        &[disabled] {\n            pointer-events: none;\n            color: var(--grey);\n        }\n\n    }\n`;\n\nexport default function Pagination({pageSize, totalCount, currentPage, skip, base}) {\n    const totalPages = Math.ceil(totalCount / pageSize);\n    const prevPage = currentPage - 1;\n    const nextPage= currentPage + 1;\n    const hasNextPage = nextPage <= totalPages;\n    const hasPrevPage = prevPage >= 1;\n    \n    return (\n        <PaginationStyles>\n            <Link disabled={!hasPrevPage} to={`${base}/${prevPage}`}> &#8592; Prev </Link>\n            {Array.from({ length: totalPages }).map((_, i) => \n                <Link className={currentPage === 1 && i === 0 ? 'current' : ''} to={`${base}/${i > 0 ? i + 1 : ''}`}>{i + 1}</Link>\n            )}\n            <Link disabled={!hasNextPage} to={`${base}/${nextPage}`}> Next &#8594; </Link>\n        </PaginationStyles>\n    )\n}","import { graphql, Link } from 'gatsby';\nimport React from 'react';\nimport Img from 'gatsby-image';\nimport styled from 'styled-components';\nimport Pagination from '../components/Pagination';\nimport SEO from '../components/SEO';\n\nconst SlicemasterGrid = styled.div`\n    display: grid;\n    grid-gap: 2rem;\n    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n`;\n\nconst SlicemasterStyles = styled.div`\n    a {\n        text-decoration: none;\n    }\n    .gatsby-image-wrapper {\n        height: 400px;\n    }\n    h2 {\n        transform: rotate(-2deg);\n        text-align: center;\n        font-size: 4rem;\n        margin-bottom: -2rem;\n        position: relative;\n        z-index: 2;\n    }\n    .description {\n        background: var(--yellow);\n        padding: 1rem;\n        margin: 2rem;\n        margin-top: -6rem;\n        position: relative;\n        z-index: 2;\n        transform: rotate(1deg);\n        text-align: center;\n    }\n`;\n\nexport default function SlicesmastersPage({ data, pageContext }) {\n    const slicemasters = data.slicemasters;\n    console.log(data);\n    return (\n        <>\n            <SEO title={`Slicemasters - Page ${pageContext.currentPage || 1}`} />\n            <Pagination \n            pageSize={parseInt(process.env.GATSBY_PAGE_SIZE)}\n            totalCount={slicemasters.totalCount}\n            currentPage={pageContext.currentPage || 1}\n            skip={pageContext.skip}\n            base=\"/slicemasters\"\n            />\n            <SlicemasterGrid>\n            {slicemasters.nodes.map(person => (\n                <SlicemasterStyles>\n                    <Link to={`/slicemaster/${person.slug.current}`}>\n                        <h2>\n                            <span className=\"mark\">{person.name}</span>\n                        </h2>\n                    </Link>\n                    <Img fluid={person.image.asset.fluid} />\n                    <p className=\"description\">{person.description}</p>\n                </SlicemasterStyles>\n            ))}\n            </SlicemasterGrid>\n        </>\n    );\n}\n\nexport const query = graphql`\n    query($skip: Int = 0, $pageSize: Int = 4) {\n        slicemasters: allSanityPerson(limit: $pageSize, skip: $skip) {\n            totalCount \n            nodes {\n                name\n                id\n                slug {\n                    current\n                }\n                description \n                image {\n                    asset {\n                        fluid(maxWidth: 400) {\n                            ...GatsbySanityImageFluid\n                        }\n                    }\n                }\n            }\n        }\n    }\n `;"],"sourceRoot":""}